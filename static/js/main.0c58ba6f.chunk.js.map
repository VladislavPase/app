{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Sidebar/Nav.module.css","components/Profile/Myposts/Myposts.module.css","components/Profile/Myposts/Post/Post.module.css","serviceWorker.js","state.js","components/Header/Header.js","components/Profile/Myposts/Post/Post.js","components/Profile/Myposts/Myposts.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Content.js","components/Sidebar/Sidebar.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/News/News.js","components/Sett/Sett.js","components/Music/Music.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageText","getState","this","_callSubscriber","console","log","_addPost","newPost","unshift","_updatePostText","NewText","subscribe","observer","dispatch","action","type","messageText","push","Header","className","Post","props","s","item","ava","like","MyPosts","postsElements","map","p","newPostElement","React","createRef","postsTitle","ref","onChange","text","updateNewTextActionCreator","current","value","cols","rows","btnWrapper","btn","onClick","ProfileInfo","infoBlock","imageBox","desctiptionWrapper","infoBox","itemTitle","subitem","photosWrapper","photosTitle","gallery","galleryItem","Content","contentItems","Sidebar","to","activeClassName","active","DialogItem","path","Message","Dialogs","state","dialogsElements","d","messageElements","m","dialogsItems","messagesWrapper","inputMessages","placeholder","e","target","updateNewMessageText","News","Sett","Music","App","render","reRender","ReactDOM","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c58ba6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBlock\":\"ProfileInfo_infoBlock__8AX_0\",\"desctiptionWrapper\":\"ProfileInfo_desctiptionWrapper__2U2pi\",\"imageBox\":\"ProfileInfo_imageBox__2zACk\",\"ava\":\"ProfileInfo_ava__YWHhe\",\"infoBox\":\"ProfileInfo_infoBox__2f8M7\",\"name\":\"ProfileInfo_name__1PC6F\",\"item\":\"ProfileInfo_item__1TFIs\",\"itemTitle\":\"ProfileInfo_itemTitle__2UfXG\",\"subitem\":\"ProfileInfo_subitem__2xLdr\",\"photosTitle\":\"ProfileInfo_photosTitle__3YdPV\",\"gallery\":\"ProfileInfo_gallery__3P_EX\",\"galleryItem\":\"ProfileInfo_galleryItem___-VZe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ebYJ\",\"dialogsItems\":\"Dialogs_dialogsItems__3fZoQ\",\"item\":\"Dialogs_item__1xZZy\",\"active\":\"Dialogs_active__1w36J\",\"messages\":\"Dialogs_messages__1KycT\",\"message\":\"Dialogs_message__3G380\",\"messagesWrapper\":\"Dialogs_messagesWrapper__1PwNg\",\"ava\":\"Dialogs_ava__2_R6f\",\"inputMessages\":\"Dialogs_inputMessages__1A2Pw\",\"btn\":\"Dialogs_btn__27hdE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Nav_item__2g3b5\",\"active\":\"Nav_active__Rcv8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Myposts_posts__1KDyW\",\"postsTitle\":\"Myposts_postsTitle__o8Sk1\",\"btnWrapper\":\"Myposts_btnWrapper__23xa3\",\"btn\":\"Myposts_btn__O12W8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1jGCU\",\"ava\":\"Post_ava__tagxQ\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const ADD_POST = 'ADD_POST';\r\nconst UPDATE_TEXT_POST = 'UPDATE_TEXT_POST';\r\nconst UPDATE_MESSAGE_TEXT = 'UPDATE_MESSAGE_TEXT';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\n\r\nlet store = {\r\n    _state : {\r\n        profilePage: {\r\n            posts : [\r\n                {id: 1, message: \"Hi, how are you?👌\", likesCount: 16},\r\n                {id: 2, message: \"it's my first post!!!😊😊😊\", likesCount: 20},\r\n                {id: 3, message: \"Hello\", likesCount: 1},\r\n                {id: 4, message: \"Fine\", likesCount: 2}\r\n            ],\r\n            newPostText : 'Input your text here..'\r\n        },\r\n        dialogsPage: {\r\n            dialogs : [\r\n                {id: 1, name: \"Dima\"},\r\n                {id: 2, name: \"Sveta\"},\r\n                {id: 3, name: \"Misha\"},\r\n                {id: 4, name: \"Valera\"},\r\n                {id: 5, name: \"Katya\"}\r\n            ],\r\n            messages : [\r\n                {id: 1, message: \"Hi\"},\r\n                {id: 2, message: \"How are you?\"},\r\n                {id: 3, message: \"Nice\"}\r\n            ],\r\n            newMessageText : '',\r\n        }\r\n    },\r\n    getState(){\r\n        return this._state;\r\n    },\r\n    _callSubscriber(){\r\n        console.log('State changed');\r\n    },\r\n    _addPost(){\r\n        let newPost = {id: 5, message: this._state.profilePage.newPostText, likesCount: 0};\r\n        this._state.profilePage.posts.unshift(newPost);\r\n        this._state.profilePage.newPostText = '';\r\n        this._callSubscriber(this._state);\r\n    },\r\n    _updatePostText(NewText){\r\n        this._state.profilePage.newPostText = NewText;\r\n        this._callSubscriber(this._state);\r\n    },\r\n    subscribe(observer){\r\n        this._callSubscriber = observer;\r\n    },\r\n    dispatch(action){\r\n        if (action.type === \"ADD_POST\"){\r\n            this._addPost();\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === \"UPDATE_TEXT_POST\"){\r\n            this._updatePostText(action.NewText);\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === 'UPDATE_MESSAGE_TEXT'){\r\n            this._state.dialogsPage.newMessageText = action.messageText;\r\n            this._callSubscriber(this._state);\r\n        }else if (action.type === 'SEND_MESSAGE'){\r\n            let messageText = this._state.dialogsPage.newMessageText;\r\n            this._state.dialogsPage.newMessageText = '';\r\n            this._state.dialogsPage.messages.push({id: 4, message: messageText});\r\n            this._callSubscriber(this._state);\r\n        }\r\n    },\r\n};\r\n\r\n\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {type: ADD_POST}\r\n}\r\n\r\nexport const updateNewTextActionCreator = (text) => {\r\n    return {type : UPDATE_TEXT_POST,  NewText: text}\r\n}\r\n\r\nexport const sendMessageCreator = () => {\r\n    return {type : SEND_MESSAGE}\r\n}\r\n\r\nexport const updateNewMessageText = (messageText) => {\r\n    return {type : UPDATE_MESSAGE_TEXT,  messageText: messageText}\r\n}\r\n\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\n\r\nfunction Header() {\r\n    return(\r\n        <div className=\"top-line\">\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import  React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <div className={s.ava}></div>\r\n            {props.message}\r\n            <div>\r\n                Like: {props.like}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import  React from 'react';\r\nimport s from './Myposts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {addPostActionCreator, updateNewTextActionCreator} from \"../../../state\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map( p => <Post message={p.message} like={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = () => {\r\n        props.dispatch(addPostActionCreator());\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        let action = updateNewTextActionCreator(text);\r\n        props.dispatch(action);\r\n    }\r\n\r\n    return(\r\n        <div className={s.posts}>\r\n            <h3 className={s.postsTitle}>My Posts</h3>\r\n            <div>\r\n                <textarea ref={newPostElement} onChange={onPostChange} name=\"\" id=\"\" cols=\"30\" rows=\"10\" value={props.newPostText}/>\r\n            </div>\r\n            <div className={s.btnWrapper}>\r\n                <button className={s.btn} onClick={ addPost }>Add post</button>\r\n            </div>\r\n            {postsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    return(\r\n        <div className={s.infoBlock}>\r\n            <div className={s.imageBox}/>\r\n            <div className={s.desctiptionWrapper}>\r\n                <div className={s.ava}>ava</div>\r\n                <div className={s.infoBox}>\r\n                    <div className={s.name}>Tony Tony</div>\r\n                    <div className={s.item}>\r\n                        <div className={s.itemTitle}>Birthday</div>\r\n                        <div className={s.subitem}>04.04.90</div></div>\r\n                    <div className={s.item}><div className={s.itemTitle}>City</div><div className={s.subitem}>New York, USA</div></div>\r\n                    <div className={s.item}><div className={s.itemTitle}>Hobbies</div><div className={s.subitem}>HTML5, CSS3, JS, React JS</div></div>\r\n                    <div className={s.photosWrapper}>\r\n                        <div className={s.photosTitle}>Photos:</div>\r\n                        <div className={s.gallery}>\r\n                            <div className={s.galleryItem}>1</div>\r\n                            <div className={s.galleryItem}>2</div>\r\n                            <div className={s.galleryItem}>3</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from './Content.module.css'\r\nimport MyPosts from \"./Myposts/Myposts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\n\r\nconst Content = (props) => {\r\n    return(\r\n        <div className={s.contentItems}>\r\n            <ProfileInfo/>\r\n            <MyPosts posts={props.profilePage.posts}\r\n                     dispatch={props.dispatch}\r\n                     newPostText={props.profilePage.newPostText}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport s from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nfunction Sidebar() {\r\n    return(\r\n        <div className=\"nav\">\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Home</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import  React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return(\r\n        <div className={s.item}>\r\n            <NavLink to={path} activeClassName={s.active}>\r\n                <div className={s.ava}></div>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import  React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div>\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import  React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator, updateNewMessageText} from \"../../state\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.store.getState().dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} id={d.id}/>);\r\n    let messageElements = state.messages.map( m => <Message message={m.message}/>);\r\n    let newMessageText = state.newMessageText;\r\n\r\n    let onSendMessage = () => {\r\n        props.store.dispatch(sendMessageCreator());\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let messageText = e.target.value;\r\n        props.store.dispatch(updateNewMessageText(messageText));\r\n    }\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.messagesWrapper}>\r\n                    {messageElements}\r\n                </div>\r\n                <div className={s.inputMessages}>\r\n                    <textarea placeholder=\"Input your message here...\"\r\n                        onChange={onNewMessageChange} value={newMessageText}>\r\n                    </textarea>\r\n                </div>\r\n                <button onClick={onSendMessage} className={s.btn}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import  React from 'react';\r\n\r\nconst News = (props) => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import  React from 'react';\r\n\r\nconst Sett = (props) => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sett;","import  React from 'react';\r\n\r\nconst Music = (props) => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Content from \"./components/Profile/Content\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport Dialogs from \"./components/Dialogs/Dialogs\";\r\nimport News from \"./components/News/News\";\r\nimport Sett from \"./components/Sett/Sett\";\r\nimport Music from \"./components/Music/Music\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\nfunction App(props) {\r\n  return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Header/>\r\n          <div className=\"content-wrapper\">\r\n            <div className=\"sidebar\">\r\n              <Sidebar/>\r\n            </div>\r\n            <div className=\"content\">\r\n                <Route path=\"/profile\" render={ () =>\r\n                    <Content profilePage={props.state.profilePage} dispatch={props.dispatch}/> } />\r\n                <Route path=\"/music\" render={ () =>\r\n                    <Music/> }/>\r\n                <Route path=\"/dialogs\" render={ () =>\r\n                    <Dialogs store={props.store} dialogs={props.state.dialogsPage.dialogs} /> }/>\r\n                <Route path=\"/news\" render={ () => <News/> }/>\r\n                <Route path=\"/settings\" render={ () => <Sett/> }/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./state\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nlet reRender = (state) => {\r\n    ReactDOM.render(<App state={state} store={store}\r\n                         dispatch={store.dispatch.bind(store)}/>,\r\n        document.getElementById('root'));\r\n};\r\n\r\nreRender(store.getState());\r\n\r\nstore.subscribe(reRender);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}